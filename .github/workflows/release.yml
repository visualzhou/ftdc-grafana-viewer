name: release

on:
  push:
    tags: ["v*.*.*"] # any semantic-version tag

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build → ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # native builds (no cross required)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      # Build the release binary
      - run: cargo build --release --locked --target ${{ matrix.target }}

      # Package (zip on *nix → .tar.gz, zip on Windows)
      - name: Archive
        shell: bash
        run: |
          BIN_NAME=ftdc-importer
          TARGET_DIR=target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == windows-latest ]]; then
            7z a ${BIN_NAME}-${{ matrix.target }}.zip $TARGET_DIR/${BIN_NAME}.exe
          else
            tar -czf ${BIN_NAME}-${{ matrix.target }}.tar.gz -C $TARGET_DIR ${BIN_NAME}
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            ftdc-importer-${{ matrix.target }}.*

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "**/ftdc-importer-*"
